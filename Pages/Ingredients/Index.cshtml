@page
@model Thetford_Family_Recipes_Webapp.Pages_Ingredients.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p><a asp-page="Create">Create New</a></p>

<div class="row">
    <form class="d-flex" role="search" asp-page="./Index" method="get">
        <div class="col-3">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input class="form-control me-2" type="search" name="CurrentSearch" value="@Model.CurrentSearch" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </div>
        </div>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @{
                    var nameSort = "name_asc";
                    if (Model.CurrentSort == "name_asc")
                    {
                        nameSort = "name_desc";
                    }
                }
                <a asp-page="./Index" asp-route-CurrentSort="@nameSort" asp-route-PageNum="@Model.PageNum">@Html.DisplayNameFor(model => model.Ingredient[0].BaseName)</a>
            </th>
            <th>
                Used In
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Ingredient) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BaseName)
            </td>
            <td>
            @foreach (var ri in item.RecipeIngredients)
            {
                <span>
                @ri.Recipes.RecipeName
                @ri.UnitsCount
                @ri.UnitsType
                </span>
                <br />
            }
            @if (item.RecipeIngredients.Count == 0)
            {
                @:No recipes use this ingredient
            }
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.IngredientID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.IngredientID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.IngredientID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<hr />
@{
    // If user is on page 1, prevDisabled will be set to the "disabled" class, otherwise, it will be empty. So our previous button will be enabled or disabled based on this logic
    var prevDisabled = "";
    var nextDisabled = "";
    if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    }
    if (Model.PageNum >= Model.TotalPages)
    {
        nextDisabled = "disabled";
    }
}
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum - 1)" asp-route-CurrentSort="@Model.CurrentSort">Previous</a></li>
        <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum + 1)" asp-route-CurrentSort="@Model.CurrentSort">Next</a></li>
    </ul>
</nav>